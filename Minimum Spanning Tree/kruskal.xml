<blocks app="Snap! 4.0, http://snap.berkeley.edu" version="1"><block-definition s="MST Kruskal (Advanced)" type="command" category="network"><header></header><code></code><inputs></inputs><script><block s="doDeclareVariables"><list><l>edge list</l><l>union list</l><l>edges added</l><l>union 1</l><l>union 2</l><l>labels</l></list></block><block s="doSetVar"><l>labels</l><block s="reportNewDict"><list></list></block></block><block s="doForEach"><l>edge</l><block s="getEdges"></block><script><block s="setDict"><block s="reportJoinWords"><list><block s="reportListItem"><l>1</l><block var="edge"/></block><l>--</l><block s="reportListItem"><l>2</l><block var="edge"/></block></list></block><block var="labels"/><block s="getEdgeAttrib"><l>label</l><block var="edge"/></block><comment w="90" collapsed="false">Save edge costs.</comment></block></script></block><block s="doSetVar"><l>edge list</l><block s="sortEdges"><block s="getEdges"></block><l>label</l><l>ascending</l></block><comment w="90" collapsed="false">Sort all of the edges from shortest to longest</comment></block><block s="doSetVar"><l>union list</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>edges added</l><l>0</l></block><block s="doNumericFor"><l>i</l><l>1</l><block s="numberOfNodes"></block><script><block s="doAddToList"><block var="i"/><block var="union list"/></block></script><comment w="123" collapsed="false">Initialise union find list</comment></block><block s="doUntil"><block s="reportEquals"><block var="edges added"/><block s="reportDifference"><block s="numberOfNodes"></block><l>1</l></block></block><script><block s="doSetVar"><l>union 1</l><custom-block s="find %l %s"><block var="union list"/><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="edge list"/></block></block></custom-block><comment w="90" collapsed="true">Determine which tree each end of the edge belongs to</comment></block><block s="doSetVar"><l>union 2</l><custom-block s="find %l %s"><block var="union list"/><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="edge list"/></block></block></custom-block></block><block s="doIf"><block s="reportNot"><block s="reportEquals"><block var="union 1"/><block var="union 2"/></block></block><script><block s="setEdgeAttrib"><l>color</l><block s="reportListItem"><l>1</l><block var="edge list"/></block><l>Blue</l></block><block s="doChangeVar"><l>edges added</l><l>1</l></block><block s="doSetVar"><l>union list</l><custom-block s="union %l %s %s"><block var="union list"/><block var="union 1"/><block var="union 2"/></custom-block></block></script><comment w="90" collapsed="true">If the edge connects two trees then add it and connect those two trees</comment></block><block s="doDeleteFromList"><l>1</l><block var="edge list"/></block></script><comment w="90" collapsed="true">N - 1 edges are required to form a MST.</comment></block></script><password></password><salt></salt></block-definition><block-definition s="find %&apos;list&apos; %&apos;item&apos;" type="reporter" category="operators"><header></header><code></code><inputs><input type="%l"></input><input type="%s"></input></inputs><script><block s="doDeclareVariables"><list><l>index</l><l>index to update</l></list></block><block s="doSetVar"><l>index</l><block var="item"/></block><block s="doUntil"><block s="reportEquals"><block s="reportListItem"><block var="index"/><block var="list"/></block><block var="index"/></block><script><block s="doSetVar"><l>index to update</l><block var="index"/></block><block s="doSetVar"><l>index</l><block s="reportListItem"><block var="index"/><block var="list"/></block></block><block s="doReplaceInList"><block var="index to update"/><block var="list"/><block s="reportListItem"><block var="index"/><block var="list"/></block><comment w="120" collapsed="false">Path compression, reduces depth of tree by 1 whenever Find is used. Minimum depth is 2.</comment></block></script></block><block s="doReport"><block var="index"/></block></script><password></password><salt></salt></block-definition><block-definition s="union %&apos;list&apos; %&apos;item1&apos; %&apos;item2&apos;" type="reporter" category="operators"><header></header><code></code><inputs><input type="%l"></input><input type="%s"></input><input type="%s"></input></inputs><script><block s="doReplaceInList"><block var="item1"/><block var="list"/><block var="item2"/><comment w="90" collapsed="false">Make one of the trees the root of the other.</comment></block><block s="doReport"><block var="list"/></block></script><scripts><comment x="98" y="114.19999999999999" w="157" collapsed="false">Could be improved by ensuring that the tree of smallest depth gets added as the child. Requires maintaining a rank list.</comment></scripts><password></password><salt></salt></block-definition><block-definition s="MST Kruskal (Basic)" type="command" category="network"><header></header><code></code><inputs></inputs><script><block s="doDeclareVariables"><list><l>edge list</l><l>edges added</l><l>labels</l><l>number of nodes</l><l>removed edges</l></list></block><block s="doSetVar"><l>labels</l><block s="reportNewDict"><list></list></block></block><block s="doForEach"><l>edge</l><block s="getEdges"></block><script><block s="setDict"><block s="reportJoinWords"><list><block s="reportListItem"><l>1</l><block var="edge"/></block><l>--</l><block s="reportListItem"><l>2</l><block var="edge"/></block></list></block><block var="labels"/><block s="getEdgeAttrib"><l>label</l><block var="edge"/></block><comment w="90" collapsed="false">Save edge costs.</comment></block></script></block><block s="doSetVar"><l>edge list</l><block s="sortEdges"><block s="getEdges"></block><l>label</l><l>ascending</l><comment w="90" collapsed="false">Sort all of the edges from shortest to longest</comment></block></block><block s="doSetVar"><l>removed edges</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>edges added</l><l>0</l></block><block s="doSetVar"><l>number of nodes</l><block s="numberOfNodes"></block></block><block s="newGraph"></block><block s="doUntil"><block s="reportEquals"><block var="edges added"/><block s="reportDifference"><block var="number of nodes"/><l>1</l></block></block><script><block s="addEdge"><list><block s="reportListItem"><l>1</l><block var="edge list"/></block></list></block><block s="doIfElse"><block s="isCyclic"></block><script><block s="removeEdge"><block s="reportListItem"><l>1</l><block var="edge list"/></block><comment w="90" collapsed="false">If adding the next cheapest edge creates a cycle then do not add it.</comment></block><block s="doAddToList"><block s="reportListItem"><l>1</l><block var="edge list"/></block><block var="removed edges"/></block></script><script><block s="doChangeVar"><l>edges added</l><l>1</l></block><block s="setEdgeAttrib"><l>label</l><block s="reportListItem"><l>1</l><block var="edge list"/></block><block s="getDict"><block s="reportJoinWords"><list><block s="reportListItem"><l>1</l><block s="reportListItem"><l>1</l><block var="edge list"/></block></block><l>--</l><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="edge list"/></block></block></list></block><block var="labels"/></block><comment w="90" collapsed="false">Restore edge cost.</comment></block><block s="setEdgeAttrib"><l>color</l><block s="reportListItem"><l>1</l><block var="edge list"/></block><l>Blue</l></block></script></block><block s="doDeleteFromList"><l>1</l><block var="edge list"/></block></script><comment w="90" collapsed="true">N - 1 edges are required to form a MST.</comment></block><block s="doForEach"><l>edge</l><block var="removed edges"/><script><block s="addEdge"><list><block var="edge"/></list></block><block s="setEdgeAttrib"><l>label</l><block var="edge"/><block s="getDict"><block s="reportJoinWords"><list><block s="reportListItem"><l>1</l><block var="edge"/></block><l>--</l><block s="reportListItem"><l>2</l><block var="edge"/></block></list></block><block var="labels"/></block></block></script><comment w="90" collapsed="false">Restore rest of graph, MST is coloured blue.</comment></block><block s="doForEach"><l>edge</l><block var="edge list"/><script><block s="addEdge"><list><block var="edge"/></list></block><block s="setEdgeAttrib"><l>label</l><block var="edge"/><block s="getDict"><block s="reportJoinWords"><list><block s="reportListItem"><l>1</l><block var="edge"/></block><l>--</l><block s="reportListItem"><l>2</l><block var="edge"/></block></list></block><block var="labels"/></block></block></script></block></script><password></password><salt></salt></block-definition></blocks>