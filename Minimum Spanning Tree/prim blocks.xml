<blocks app="Snap! 4.0, http://snap.berkeley.edu" version="1"><block-definition s="MST Prim" type="command" category="network"><header></header><code></code><inputs></inputs><script><block s="doDeclareVariables"><list><l>Edge queue</l><l>edge</l><l>nodes added</l><l>visited colour</l></list></block><block s="doSetVar"><l>visited colour</l><l>#AAAAFF</l></block><block s="doForEach"><l>item</l><block s="getNodes"></block><script><block s="setNodeAttrib"><l>color</l><block var="item"/><l>black</l></block></script></block><block s="doForEach"><l>item</l><block s="getEdges"></block><script><block s="setEdgeAttrib"><l>color</l><block var="item"/><l>black</l></block></script></block><block s="setNodeAttrib"><l>color</l><block s="reportListItem"><l>1</l><block s="getNodes"></block></block><block var="visited colour"/><comment w="90" collapsed="false">Start at the first node</comment></block><block s="doSetVar"><l>Edge queue</l><custom-block s="empty priority queue"></custom-block></block><block s="doSetVar"><l>nodes added</l><l>1</l></block><block s="doForEach"><l>e</l><block s="getNeighborEdges"><block s="reportListItem"><l>1</l><block s="getNodes"></block></block></block><script><custom-block s="push %s with priority %n to priority queue %s"><block var="e"/><block s="getEdgeAttrib"><l>label</l><block var="e"/></block><block var="Edge queue"/></custom-block></script></block><block s="doUntil"><block s="reportOr"><block s="reportEquals"><block var="nodes added"/><block s="numberOfNodes"></block></block><custom-block s="priority queue %s is empty"><block var="Edge queue"/></custom-block></block><script><block s="doSetVar"><l>edge</l><custom-block s="pop min from priority queue %s"><block var="Edge queue"/></custom-block><comment w="90" collapsed="true">Get the cheapest edge connected to the existing connected set.</comment></block><block s="doIf"><block s="reportNot"><block s="reportEquals"><block s="getNodeAttrib"><l>color</l><block s="reportListItem"><l>2</l><block var="edge"/></block></block><block var="visited colour"/></block></block><script><block s="setEdgeAttrib"><l>color</l><block var="edge"/><block var="visited colour"/></block><block s="doChangeVar"><l>nodes added</l><l>1</l></block><block s="setNodeAttrib"><l>color</l><block s="reportListItem"><l>2</l><block var="edge"/></block><block var="visited colour"/></block><block s="doForEach"><l>new edge</l><block s="getNeighborEdges"><block s="reportListItem"><l>2</l><block var="edge"/></block></block><script><block s="doIf"><block s="reportNot"><block s="reportEquals"><block s="getNodeAttrib"><l>color</l><block s="reportListItem"><l>2</l><block var="new edge"/></block></block><l>blue</l></block></block><script><custom-block s="push %s with priority %n to priority queue %s"><block var="new edge"/><block s="getEdgeAttrib"><l>label</l><block var="new edge"/></block><block var="Edge queue"/></custom-block></script></block></script><comment w="90" collapsed="false">Add edges of newly connected node to the queue if not already visited.</comment></block><block s="doWait"><l>0</l></block></script><comment w="90" collapsed="false">If it connects to a new node, then connect that node.</comment></block></script><comment w="90" collapsed="true">Stop when all nodes connected or when queue is empty (graph is disconnected)</comment></block></script><scripts><comment x="478.000001" y="287.99999999999994" w="111.99999999999989" collapsed="false">Add edges of first node to queue. Note that the &apos;new&apos; node is always the second item in the edge.</comment></scripts><password></password><salt></salt></block-definition><block-definition s="empty priority queue" type="reporter" category="collections"><header></header><code></code><inputs></inputs><script><block s="doReport"><block s="reportNewList"><list></list></block></block></script><password></password><salt></salt></block-definition><block-definition s="push %&apos;object&apos; with priority %&apos;priority&apos; to priority queue %&apos;pqueue&apos;" type="command" category="collections"><header></header><code></code><inputs><input type="%s"></input><input type="%n"></input><input type="%s"></input></inputs><script><block s="doDeclareVariables"><list><l>index</l><l>parent index</l><l>value</l></list></block><block s="doAddToList"><block s="reportNewList"><list><block var="priority"/><block var="object"/></list></block><block var="pqueue"/></block><block s="doSetVar"><l>index</l><block s="reportListLength"><block var="pqueue"/></block></block><block s="doSetVar"><l>parent index</l><block s="reportMonadic"><l><option>floor</option></l><block s="reportQuotient"><block var="index"/><l>2</l></block></block></block><block s="doIf"><block s="reportNot"><block s="reportEquals"><block var="index"/><l>1</l></block></block><script><block s="doUntil"><block s="reportOr"><block s="reportEquals"><block var="index"/><l>1</l></block><block s="reportLessThan"><block s="reportListItem"><l>1</l><block s="reportListItem"><block var="parent index"/><block var="pqueue"/></block></block><block s="reportListItem"><l>1</l><block s="reportListItem"><block var="index"/><block var="pqueue"/></block></block></block></block><script><block s="doSetVar"><l>value</l><block s="reportListItem"><block var="index"/><block var="pqueue"/></block></block><block s="doReplaceInList"><block var="index"/><block var="pqueue"/><block s="reportListItem"><block var="parent index"/><block var="pqueue"/></block></block><block s="doReplaceInList"><block var="parent index"/><block var="pqueue"/><block var="value"/></block><block s="doSetVar"><l>index</l><block var="parent index"/></block><block s="doSetVar"><l>parent index</l><block s="reportMonadic"><l><option>floor</option></l><block s="reportQuotient"><block var="index"/><l>2</l></block></block></block></script></block></script></block></script><password></password><salt></salt></block-definition><block-definition s="pop min from priority queue %&apos;pqueue&apos;" type="reporter" category="collections"><header></header><code></code><inputs><input type="%s"></input></inputs><script><block s="doDeclareVariables"><list><l>return value</l></list></block><block s="doIf"><block s="reportEquals"><block s="reportListLength"><block var="pqueue"/></block><l>0</l></block><script><block s="doReport"><l>Error: Priority queue empty</l></block></script></block><block s="doSetVar"><l>return value</l><block s="reportListItem"><l>2</l><block s="reportListItem"><l>1</l><block var="pqueue"/></block></block></block><block s="doReplaceInList"><l>1</l><block var="pqueue"/><block s="reportListItem"><l><option>last</option></l><block var="pqueue"/></block></block><block s="doDeleteFromList"><l><option>last</option></l><block var="pqueue"/></block><custom-block s="min-heapify priority queue %s %n"><block var="pqueue"/><l>1</l></custom-block><block s="doReport"><block var="return value"/></block></script><password></password><salt></salt></block-definition><block-definition s="priority queue %&apos;pqueue&apos; is empty" type="predicate" category="collections"><header></header><code></code><inputs><input type="%s"></input></inputs><script><block s="doReport"><block s="reportEquals"><block s="reportListLength"><block var="pqueue"/></block><l>0</l></block></block></script><password></password><salt></salt></block-definition><block-definition s="min-heapify priority queue %&apos;pqueue&apos; %&apos;index&apos;" type="command" category="collections"><header></header><code></code><inputs><input type="%s"></input><input type="%n"></input></inputs><script><block s="doDeclareVariables"><list><l>left</l><l>right</l><l>smallest</l><l>value</l></list></block><block s="doSetVar"><l>left</l><block s="reportProduct"><l>2</l><block var="index"/></block></block><block s="doSetVar"><l>right</l><block s="reportSum"><block s="reportProduct"><l>2</l><block var="index"/></block><l>1</l></block></block><block s="doSetVar"><l>smallest</l><block var="index"/></block><block s="doIf"><block s="reportAnd"><block s="reportNot"><block s="reportGreaterThan"><block var="left"/><block s="reportListLength"><block var="pqueue"/></block></block></block><block s="reportLessThan"><block s="reportListItem"><l>1</l><block s="reportListItem"><block var="left"/><block var="pqueue"/></block></block><block s="reportListItem"><l>1</l><block s="reportListItem"><block var="smallest"/><block var="pqueue"/></block></block></block></block><script><block s="doSetVar"><l>smallest</l><block var="left"/></block></script></block><block s="doIf"><block s="reportAnd"><block s="reportNot"><block s="reportGreaterThan"><block var="right"/><block s="reportListLength"><block var="pqueue"/></block></block></block><block s="reportLessThan"><block s="reportListItem"><l>1</l><block s="reportListItem"><block var="right"/><block var="pqueue"/></block></block><block s="reportListItem"><l>1</l><block s="reportListItem"><block var="smallest"/><block var="pqueue"/></block></block></block></block><script><block s="doSetVar"><l>smallest</l><block var="right"/></block></script></block><block s="doIf"><block s="reportNot"><block s="reportEquals"><block var="smallest"/><block var="index"/></block></block><script><block s="doSetVar"><l>value</l><block s="reportListItem"><block var="index"/><block var="pqueue"/></block></block><block s="doReplaceInList"><block var="index"/><block var="pqueue"/><block s="reportListItem"><block var="smallest"/><block var="pqueue"/></block></block><block s="doReplaceInList"><block var="smallest"/><block var="pqueue"/><block var="value"/></block><custom-block s="min-heapify priority queue %s %n"><block var="pqueue"/><block var="smallest"/></custom-block></script></block></script><password></password><salt></salt></block-definition></blocks>